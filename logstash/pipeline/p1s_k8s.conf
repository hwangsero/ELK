input {
    beats {
        port => 5001
    }
}

filter {
    if "web-service" in [kubernetes][node][labels][purpose] {
        if [message] =~ /^{ / {
            json {
                source => "message"
            }
        }
        else if [message] =~ /^(?:[0-9]{1,3}\.){3}[0-9]{1,3}/ or [message] =~ /([a-f0-9:]+:+)(?:[0-9]{1,3}\.){3}[0-9]{1,3}/ {
            grok {
                match => { "message" => [ "%{HOSTNAME:hostname} - - \[%{HTTPDATE:timestamp}\] \"(?:%{WORD:verb} %{URIPROTO:protocol}://(?:%{URIHOST:server})(?:%{URIPATHPARAM:request})(?: HTTP/%{NUMBER:httpversion})?|%{DATA:rawrequest})\" %{NUMBER:response} (?:%{NUMBER:bytes}|-) %{QS:referrer} %{QS:agent} %{NUMBER:response_time}" ] }
            }
        }

        }
        else if "mongo" in [kubernetes][container][name] {
        }
        else if "proxy" in [kubernetes][container][name] {
            grok {
                match => { "message" => [ "%{HOSTNAME:hostname} - - \[%{HTTPDATE:timestamp}\] \"%{WORD:verb} %{PATH:path}%{SPACE}%{DATA:httpverson}\" %{NUMBER:response} %{NUMBER:bytes} %{DATA} \"%{GREEDYDATA:info}\"" ] }
            }
        }
    }


    output {
        elasticsearch {
            hosts => "elasticsearch:9200"
                index => "k8s-%{[kubernetes][namespace]}"
                action => "create"
                ecs_compatibility => disabled
        }
    }
