input {
    beats {
        port => 5000
    }
#        tcp {
#                port => 5000
#        }
}

filter {
# laravel log의 [stacktrace] log들 삭제
    if "laravel" in [tags] {
        if [message] =~ /^\[stacktrace\]/ {
            drop { }
        }
    }
# nginx error.log transform 
    else if "nginx_error" in [tags] {
        grok {
            match => { "message" => [ "(?<timestamp>%{YEAR}[./]%{MONTHNUM}[./]%{MONTHDAY} %{TIME}) \[%{LOGLEVEL:severity}\] %{POSINT:pid}#%{NUMBER:threadid}\: \*%{NUMBER:connectionid} %{GREEDYDATA:message}, client: %{IP:client}, server: %{GREEDYDATA:server}, request: \"(?:%{WORD:verb} %{NOTSPACE:request}(?: HTTP/%{NUMBER:httpversion}))\"(, upstream: \"%{GREEDYDATA:upstream}\")?, host: %{GREEDYDATA:host}" ] }
        }
    }
# nginx access.log transform, remove response == 301
    else if "nginx_access" in [tags] {
        grok {
            match => { "message" => [ "%{HOSTNAME:hostname} - - \[%{HTTPDATE:timestamp}\] \"(?:%{WORD:verb} %{URIPROTO:protocol}://(?:%{URIHOST:server})(?:%{URIPATHPARAM:request})(?: HTTP/%{NUMBER:httpversion})?|%{DATA:rawrequest})\" %{NUMBER:response} (?:%{NUMBER:bytes}|-) %{QS:referrer} %{QS:agent} %{NUMBER:response_time}" ] }
        }
        if [response] == "301" {
            drop {}
        }
    }
    else if "mariadb_slow_query" in [tags] {
        grok {
            match => { "message" => "^# Time:%{SPACE}(?<mysql_slow_querydate>\d{6}%{SPACE}\d{1,2}:\d{1,2}:\d{1,2})\n%{GREEDYDATA}User@Host: (?:%{USERNAME:mysql_slow_clientuser})\[(?:%{DATA:mysql_slow_clientdbname})\]%{SPACE}@%{GREEDYDATA}\[(?:%{DATA:mysql_slow_clientip})\]\n%{GREEDYDATA}Thread_id:%{SPACE}%{DATA:mysql_slow_id}%{GREEDYDATA}Schema:%{SPACE}%{DATA:mysql_slow_schema}%{GREEDYDATA}QC_hit:%{SPACE}%{DATA:qc_hit}\n%{GREEDYDATA}Query_time: %{NUMBER:mysql_slow_querytime:float}(?:%{SPACE})Lock_time: %{NUMBER:mysql_slow_locktime:float}(?:%{SPACE})Rows_sent: %{NUMBER:mysql_slow_rowssent:int}(?:%{SPACE})Rows_examined: %{NUMBER:mysql_slow_rowsexamined:int}(?:%{SPACE})(?:%{GREEDYDATA})\n%{GREEDYDATA}\nSET timestamp=%{NUMBER:mysql_slow_timestamp};\n(?<mysql_slow_query>(.|\n)*)"
            }
        }
        ruby {
            code => "event.cancel if event.get('message').length > 3000"
        }
    }
    else if "syslog" in [tags] {
        grok {
            match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp}%{SPACE}%{NOTSPACE:syslog_server}%{SPACE}%{NOTSPACE:syslog_type}:%{GREEDYDATA:syslog_context}"
            }
        }
    }
# filebeat에서 *.log 을 통해 들어온 파일명을 인덱스명으로 사용하기 위해 변환
    if "asterisk_log" in [tags] {
        grok {
            match => { "[log][file][path]" => [ "[a-zA-Z\/]*\/(?<[fields][index_name]>[a-zA-Z\-]*).log"] }
        }
    }
}

output {
    elasticsearch {
        hosts => "elasticsearch:9200"
            index => "%{[fields][index_name]}"
            action => "create"
            ecs_compatibility => disabled
    }
}
